include ../../assets/styles/styles.css
include mixins

+prereqsSlide("Mens vi venter")

section
  h1 Welcome!
  h3 #acn/angular/frontend/workshop 
  p Min Bedrift & UKA @ NTNU
  p 11/10/2013
  a(href='http://www.twitter.com/agresvig') @AGresvig
  |  - 
  a(href='http://www.twitter.com/kjaamodt') @Kjaamodt

+agendaSlide('hva')

section
  section
    h2 Hva skal vi lage?
    p.fragment ADS CMS frontend  
    p.fragment En webapp som kjører i browseren
    p.fragment Klienten
    p.fragment En "Single Page Application"

  section
    h2 Hvordan?
    p.fragment JavaScript!
    p.fragment HTML5
    p.fragment CSS3
    p.fragment Frameworks & Libraries
    h3.fragment FOSS FTW

section
  section
    h1 Design
    p.fragment Hva må på plass?

    aside.notes
      p Få forslag! La oss finne ut dette sammen
      p Stikkord:
      ul
        li Layout
        li Fargepalett
        li Applikasjonsflyt
      b Design på et større nivå?

  section
    h2 Applikasjonsdesign
    p.fragment Frontend
    p.fragment Backend
    p.fragment Mellomvare
    p.fragment Database

    aside.notes
      p Hva lever hvor?
      ul
        li Forretningslogikk
        li Sikkerhet
        li Statiske ressurser
        li GUI
        li Data

  section
    h3 I dag fokuserer vi på
    h2 klienten

  section
    h3 SPA/Tykklient vs. "tradisjonelle" webapps
    p.fragment Hva er forskjellen?
    p.fragment Serverside vs Clientside
    p.fragment JSON

    aside.notes
      p Vi legger all logikk forbundet med brukergrensesnittet på klienten, altså i browseren
      p Ren javascript
      p Serveren sender kun data (JSON)

+agendaSlide('ressurser')

section
  section
    h1 Lets get 
      code hacking!

  +prereqsSlide("Siste sjanse")

  section
    :markdown
      ##Hent ressurser
      ###Backend
        * Start MongoDB daemon: `$ mongod` 
          - Må kjøre i bakgrunnen
        * Last ned backend-applikasjonen: [tinyurl.com/adsCmsBackend](http://tinyurl.com/adsCmsBackend) 
          - Pakk ut og start den med `$ node server.js`
        * Verifiser at den kjører: [localhost:5000/api/player](http://localhost:5000/api/player) i browser 
          - skal gi JSON data

  section
    :markdown
      ##Hent ressurser
      ###Frontend
        * Fork [seed-prosjektet](https://github.com/Accenture-ADI-Norge/acn-angular-workshop-seed) (tinyurl.com/workshopSeed)
          - Så `$ git clone <ditt nye repo>`
        * Installer dependencies (i "acn-angular-workshop-seed"-mappen)
          - `$ npm install`
          - `$ bower install`
        * Vri om nøkkern! 
          - **`$ grunt server`**

+agendaSlide('tools')

section
  section
    a(href="http://getbootstrap.com/"): img(src="assets/images/Twitter-Bootstrap-Logo.jpg", alt="logo")
    
    blockquote.fragment Sleek, intuitive, and powerful mobile first front-end framework for faster and easier web development.

    aside.notes: :markdown
      Bootstrap er et GUI rammeverk  
      Twitter initiativ

      * Grid-system
      * MASSE styling-hjelpemidler
      * Responsive design
      * Custom GUI componenter
      * CSS effekter
      * Og masse javascript-funksjonalitet

  section
    h2 Vi prøver oss
    h4 Bootstrap navigation:
    
    pre
      code.
        <div class="navbar navbar-default navbar-static-top">
          <div class="navbar-header">    
                <a class="navbar-brand" href="#">AAFW</a>
            </div>
          
          <div class="collapse navbar-collapse header-collapse">
            <ul class="nav navbar-nav">
              <li>
              <a href="/">Nav Item 1</a>
              </li>
              <li>
              <a href="#">Nav Item 2</a>
              </li>
            </ul>
          </div>
        </div>

  section
    h3 Responsive mobile support!
    p Inne i 
      code= '<div class="navbar-header">'

    pre
      code.
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".header-collapse">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>

  section
    a(href="http://bower.io/"): img(src="assets/images/bower-logo.png", alt="Bower")

    blockquote.fragment.
      Bower is a package manager for the web. It offers a generic, unopinionated solution to the problem of front-end package management

    aside.notes: :markdown
      * Nok et Twitter initiativ
      * Fungerer ganske likt som NPM
      * Hvem som helst kan publisere pakker
      * Ment for kode som lever på *klienten*

  section
    h2 Vi prøver
    
    p Legg til nytt bootstrap theme vha. bower:
    code $ bower install bootstrap-theme-white-plum

    .fragment
      p Så, oppdater bootstrap.css fila som benyttes i index.html:
      code bower_components/bootstrap-theme-white-plum/dist/css
    
    .fragment Refresh browser

    .fragment
      h3 Boom! 
      h3 Flat UI

  section
    a(href="http://nodejs.org"): img(src="assets/images/nodejs.png", alt="NodeJS")

    blockquote.fragment.
      Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications

    aside.notes: :markdown
      * Det som er fett med Node er at det er JS på serveren
      * Ekstremt lettvekt
      * Raskt å komme i gang med
      * JS er per def asynkront, så *non blocking* betyr at serveren ikke binder CPU sykler mens den venter på svar fra DB e.l.
      * NPM følger med NodeJS - finnes et haaav av FOSS der ute

  section
    p NodeJS er out of scope i dag, men her er et eksempel

    pre: code.
      // GET - read media player by id
      exports.readPlayer = function () {
          return function (req, res) {
              MediaPlayer.findById(req.params.id, function (error, player) {
                  if (error)
                      res.json(error);
                  else
                      res.json(player);
              });
          };
      };

    aside.notes: :markdown
      * HTTP server
      * Henter opp objekt fra databasen vha. ID i URL
      * Hadde trengt 10 klasser i Java...

  section
    a(href="http://gruntjs.com/"): img(src="assets/images/grunt.jpg", alt="Grunt")
    p "Javascript Task Runner"

    blockquote.fragment.
      Why? In one word: automation. The less work you have to do when performing repetitive tasks like minification, compilation, unit testing, linting, etc, the easier your job becomes.

    aside.notes: :markdown
      * Kan ikke gå i dybden på grunt, men grunt vil hjelpe oss i dag
      * Lokal server
      * Live-oppdatering av kode i browser
      * Optimalisering av kode
      * Test-kjøring

+agendaSlide('angular')

section
  section
    a(href="http://angularjs.org/"): img(src="assets/images/angularjs-logo.png", alt="Angular")
    blockquote.
      HTML enhanced for web apps!

    aside.notes: :markdown
      * Google-backed
      * Utvider HTML språket
      * Veldig rikt på funksjonalitet
      * Et komplett rammeverk (kontra Backbone)


+agendaSlide('Code Sample')

section
    h2 The End!!



